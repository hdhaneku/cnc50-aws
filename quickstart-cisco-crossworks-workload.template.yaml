# Author - Wojciech Dec (wdec@cisco.com)
Description: "Sample CF Template for deploying Cisco Crosswork cluster VMs, with 3 hybrid VMs, on EC2"

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      -
        Label:
          default: "Cw Network Configuration"
        Parameters:
          - VpcId
          - CwSSHPassword
          - CwAmiId
          - CwMgmtSubnetId
          - CwMgmtSubnetNetmask
          - CwMgmtSubnetGateway
          - CwMgmtVIP
          - InterfaceDeploymentMode
          - CwDataSubnetId
          - CwDataSubnetNetmask
          - CwDataSubnetGateway
          - CwDataVIP
      - Label:
          default: "Cw VM customization"
        Parameters:
          - InstanceType
          - DataDiskSize
          - K8sServiceNetwork
          - K8sPodNetwork
      - Label:
          default: "OPTIONAL - VM IP addressing"
        Parameters:
          - Cw1MgmtIP
          - Cw1DataIP
          - Cw2MgmtIP
          - Cw2DataIP
          - Cw3MgmtIP
          - Cw3DataIP

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: VpcId of your existing Virtual Private Cloud (VPC)
    ConstraintDescription: Must be the VPC Id of an existing Virtual Private Cloud.

  VPCCIDR:
    AllowedPattern: ^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\/(1[6-9]|2[0-8]))$
    ConstraintDescription: CIDR block parameter must be in the form `x.x.x.x/16-28`.
    Default: 10.249.0.0/16
    Description: CIDR block for the SD-WAN VPC.
    Type: String
    # SecGroup:
    #   Type: AWS::EC2::SecurityGroup::Id
    #   Description: Pre-created security group to be applied. Must allow ingress access for ports 22, 30160:31560
  NetworkChoice:
    Description: Chose between new or exisiting TGW for Private Network.  Or an IGW in VPC for Public access via the internet
    Type: String
    AllowedValues:
      - "Private - New TGW"
      - "Private - Existing TGW"
      - "Public - IGW"
  CwMgmtSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the management subnet for the Crosswork VMs

  CwMgmtSubnetNetmask:
    Type: String
    Description: Enter the management subnet netmask in dotted decimal form, eg 255.255.255.0
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CwMgmtSubnetGateway:
    Type: String
    Description: Enter the management default gateway on the selected management subnet. This is typically the first address on the subnet.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CwMgmtVIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the management subnet to be used as the VIP. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

  CwDataSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the data subnet for the Crosswork VMs. In single interface deployments select the same subnet as for the management interface.

  InterfaceDeploymentMode:
    Type: String
    Description: Select 1 (Management only) or 2 (Management + Data) interface deployment mode.
    AllowedValues:
      - 1
      - 2
      - 3

  CwDataSubnetNetmask:
    Type: String
    Description: Enter the data subnet netmask in dotted decimal form, eg 255.255.255.0. Ignored when deploying in single interface mode.
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CwDataSubnetGateway:
    Type: String
    Description: Enter the management default gateway on the selectec data subnet. This is typically the first address on the subnet. Ignored when deploying in single interface mode.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: '0.0.0.0'

  CwDataVIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the data subnet to be used as the VIP. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

  CwAmiId:
    Type: AWS::EC2::Image::Id
    Description: Provide Crosswork AMI ID.

#  MgmntPublicIP:
#    Type: String
#    Description: Enter your public IP. Will be use to restrict CNC SSH and UI access to this IP only
#    Default: 0.0.0.0/0

  CwSSHPassword:
    Type: String
    AllowedPattern: >-
      (?=^.{6,255}$)((?=.*\d)(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[^A-Za-z0-9])(?=.*[a-z])|(?=.*[^A-Za-z0-9])(?=.*[A-Z])(?=.*[a-z])|(?=.*\d)(?=.*[A-Z])(?=.*[^A-Za-z0-9]))^.*
    Description: >-
      Enter CNC SSH Password. NOTE; Use of external secret store is recommended.
      Password for the domain admin user. Must be at least 8 characters
      and contain letters, numbers, and symbols.
    NoEcho: True


  InstanceType:
    Description: Enter EC2 instance type for the node instances.Default is m5.4xlarge.
    Type: String
    AllowedValues:
      - m5.4xlarge
      - m5.8xlarge
      - m5.2xlarge
      - m5.12xlarge
      - m5d.4xlarge
      - m5d.8xlarge
      - m5d.2xlarge
      - m5d.12xlarge
      - m5n.4xlarge
      - m5n.8xlarge
      - m5n.2xlarge
      - m5n.12xlarge
      - r5.4xlarge
      - r5.8xlarge
      - r5.2xlarge
      - r5.12xlarge
      - c5.4xlarge
      - c5.8xlarge
      - c5.2xlarge
      - c5.12xlarge
      - m5zn.2xlarge
      - m5zn.3xlarge
      - m5zn.4xlarge
    Default: m5.4xlarge

  DataDiskSize:
    Description: Cw data disk size.
    Type: Number
    MinValue: 450
    Default: 450

  K8sServiceNetwork:
    Type: String
    Description: "OPTIONAL - Enter the network address for the k8s service network. The CIDR range is fixed to '/16'."
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: '10.96.0.0'

  K8sPodNetwork:
    Type: String
    Description: "OPTIONAL - Enter the network address for the k8s pod network. The CIDR range is fixed to '/16'."
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: '10.244.0.0'

  Cw1MgmtIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the management subnet. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

  Cw1DataIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the data subnet. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

  Cw2MgmtIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the management subnet. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

  Cw2DataIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the data subnet. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

  Cw3MgmtIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the management subnet. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

  Cw3DataIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the data subnet. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""

  CwClusterPlacementStrategy:
    Type: String
    Description: Specify the EC2 instance placement strategy. Default 'cluster' ensures maximum throughput.
    Default: cluster
    AllowedValues:
      - cluster
      - partition
      - spread


  NsoAmiId:
    Type: AWS::EC2::Image::Id
    Description: Provide NSO AMI ID.

  CwDeviceSubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: Select the device subnet for the XRv devices. 
  CwDeviceSubnetNetmask:
    Type: String
    Description: Enter the data subnet netmask in dotted decimal form, eg 255.255.255.0. Ignored when deploying in single interface mode.
    Default: "255.255.255.0"
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})

  CwDeviceSubnetGateway:
    Type: String
    Description: Enter the management default gateway on the selectec data subnet. This is typically the first address on the subnet. Ignored when deploying in single interface mode.
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})
    Default: '0.0.0.0'

  CwDeviceVIP:
    Type: String
    Description: OPTIONAL - Specify a free address on the data subnet to be used as the VIP. If not specified an address will be assigned automatically.
    AllowedPattern: ((\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3}))|^$
    Default: ""


  QSS3BucketName:
    AllowedPattern: '^[0-9a-zA-Z]+([0-9a-zA-Z-]*[0-9a-zA-Z])*$'
    ConstraintDescription:
      The Quick Start bucket name can include numbers, lowercase
      letters, uppercase letters, and hyphens (-). It cannot start or end with a
      hyphen (-).
    Default: aws-quickstart
    Description:
      Name of the S3 bucket for your copy of the Quick Start assets.
      Keep the default name unless you are customizing the template.
      Changing the name updates code references to point to a new Quick
      Start location. This name can include numbers, lowercase letters,
      uppercase letters, and hyphens, but do not start or end with a hyphen (-).
      See https://aws-quickstart.github.io/option1.html.
    Type: String
  QSS3BucketRegion:
    Default: 'us-east-1'
    Description: 'AWS Region where the Quick Start S3 bucket (QSS3BucketName) is
    hosted. Keep the default Region unless you are customizing the template.
    Changing this Region updates code references to point to a new Quick Start location.
    When using your own bucket, specify the Region.
    See https://aws-quickstart.github.io/option1.html.'
    Type: String
  QSS3KeyPrefix:
    AllowedPattern: '^[0-9a-zA-Z-/]*$'
    ConstraintDescription:
      The Quick Start S3 key prefix can include numbers, lowercase letters,
      uppercase letters, hyphens (-), and forward slashes (/). The prefix should
      end with a forward slash (/).
    Default: quickstart-cisco-crossworks/
    Description:
      S3 key prefix used to simulate a directory for your copy of the
      Quick Start assets. Keep the default prefix unless you're customizing
      the template. Changing this prefix updates code references to point to
      a new Quick Start location. This prefix can include numbers, lowercase
      letters, uppercase letters, hyphens (-), and forward slashes (/). End with
      a forward slash. See https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html
      and https://aws-quickstart.github.io/option1.html.
    Type: String


  KeyName:
    Description: Pem file for access to created instance
    Type: 'AWS::EC2::KeyPair::KeyName'

  CDGAmiId:
    Type: AWS::EC2::Image::Id
    Description: Provide CDG AMI ID

  CDGSSHPassword:
    Type: String
    NoEcho: True
    Description: Enter the SSH password to be configured on the CDG

  SRPCEAmiId:
    Type: AWS::EC2::Image::Id
    Description: Provide SR-PCE AMI ID.

  WindowsAMI:
    Type: AWS::EC2::Image::Id
    Description: WIndows AMI used for RDP to connect to Crosswork CNC

Conditions:
  UsingDefaultBucket: !Equals [!Ref QSS3BucketName, 'aws-quickstart']
  ConditionPublic: !Equals [!Ref NetworkChoice, 'Public - IGW']
  ConditionPrivate: !Not [!Equals [!Ref NetworkChoice, 'Public - IGW']]
  ConditionPrivateNew: !Equals [!Ref NetworkChoice, 'Private - New TGW']

Resources:

  SecGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Enable access to CNC VMs
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 22
          ToPort: 22
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          FromPort: 443
          ToPort: 443
          CidrIp: 0.0.0.0/0          
        - IpProtocol: icmp
          FromPort: 8
          ToPort: -1
          CidrIp: 0.0.0.0/0
        - IpProtocol: tcp
          CidrIp: !Ref VPCCIDR
          FromPort: 22
          ToPort: 22
        - IpProtocol: tcp
          CidrIp: !Ref VPCCIDR
          FromPort: 30603
          ToPort: 30603
        - IpProtocol: -1
          CidrIp: !Ref VPCCIDR
          FromPort: -1
          ToPort: -1

  SSMStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-ssm.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        KeyName: !Ref KeyName
        VPC: !Ref VpcId
        VpcCIDR: !Ref VPCCIDR
        PrivateSubnet1: !Ref CwMgmtSubnetId
        SecGroup: !Ref SecGroup
        WindowsAMI: !Ref WindowsAMI
      # Outputs
          # SSMStack.Outputs.IAMProfileName


  CNCStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-CNC-cluster.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        # KeyName: !Ref KeyName  #not needed

        # Networking parameters
        VpcId: !Ref VpcId
        VPCCIDR: !Ref VPCCIDR

        
        # Crossworks parameters

        CwMgmtSubnetId: !Ref CwMgmtSubnetId
        CwMgmtSubnetNetmask: !Ref CwMgmtSubnetNetmask
        CwMgmtSubnetGateway: !Ref CwMgmtSubnetGateway
        CwMgmtVIP: !Ref CwMgmtVIP
        #Needs a condition ifDataSubnet - todo
        CwDataSubnetId: !Ref CwDataSubnetId
        InterfaceDeploymentMode: !Ref InterfaceDeploymentMode
        CwDataSubnetNetmask: !Ref CwDataSubnetNetmask
        CwDataSubnetGateway: !Ref CwDataSubnetGateway
        CwDataVIP: !Ref CwDataVIP
        CwAmiId: !Ref CwAmiId
        CwSSHPassword: !Ref CwSSHPassword
        InstanceType: !Ref InstanceType
        DataDiskSize: !Ref DataDiskSize
        K8sServiceNetwork: !Ref K8sServiceNetwork
        K8sPodNetwork: !Ref K8sPodNetwork
        Cw1MgmtIP: !Ref Cw1MgmtIP
        Cw1DataIP: !Ref Cw1DataIP
        Cw2MgmtIP: !Ref Cw2MgmtIP
        Cw2DataIP: !Ref Cw2DataIP
        Cw3MgmtIP: !Ref Cw3MgmtIP
        Cw3DataIP: !Ref Cw3DataIP
        CwClusterPlacementStrategy: !Ref CwClusterPlacementStrategy
        SecGroup: !Ref SecGroup


        QSS3BucketName: !Ref QSS3BucketName
        QSS3BucketRegion: !Ref QSS3BucketRegion
        QSS3KeyPrefix: !Ref QSS3KeyPrefix
      #Outputs
        # CNCStack.Outputs.CrossworkManagementVIP

  CDGStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-CDG50.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VpcId: !Ref VpcId
        KeyName: !Ref KeyName
        CDGAmiId: !Ref CDGAmiId
        CDGSSHPassword: !Ref CDGSSHPassword
        SecGroup: !Ref SecGroup
        CNCControllerPassword: !Ref CwSSHPassword
        InterfaceDeploymentMode: !Ref InterfaceDeploymentMode

        CDGInterface0SubnetId: !Ref CwMgmtSubnetId
        CDGInterface0Gateway: !Ref CwMgmtSubnetGateway
        CDGInterface0SubnetNetmask: !Ref CwMgmtSubnetNetmask

        CDGInterface1SubnetId: !Ref CwDataSubnetId
        CDGInterface1Gateway: !Ref CwDataSubnetGateway
        CDGInterface1SubnetNetmask: !Ref CwDataSubnetNetmask

        CDGInterface2SubnetId: !Ref CwDeviceSubnetId
        CDGInterface2Gateway: !Ref CwDeviceSubnetGateway
        CDGInterface2SubnetNetmask: !Ref CwDeviceSubnetNetmask

        CNCControllerIP: !GetAtt CNCStack.Outputs.CrossworkManagementVIP



  NSOStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-nso.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:  
        SubnetId1: !Ref CwMgmtSubnetId
        SubnetId2: !Ref CwDeviceSubnetId
        SecurityGroupId: !Ref SecGroup
        ImageId: !Ref NsoAmiId
        InstanceProfile: !GetAtt SSMStack.Outputs.IAMProfileName
        KeyName: !Ref KeyName
        # Outputs
          # NSOStack.Outputs.NSOIP

  XRVStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-xrv.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VpcId: !Ref VpcId
        KeyName: !Ref KeyName
        SRPCEAmiId: !Ref SRPCEAmiId
        SecGroup: !Ref SecGroup
        SRPCEInterface0SubnetNetmask: !Ref CwMgmtSubnetNetmask
        SRPCEInterface0SubnetId: !Ref CwMgmtSubnetId
        SRPCEInterface0Gateway: !Ref CwMgmtSubnetGateway

        SRPCEInterface1SubnetId: !Ref CwDeviceSubnetId
        SRPCEInterface1Gateway: !Ref CwDeviceSubnetGateway
        SRPCEInterface1SubnetNetmask: !Ref CwDeviceSubnetNetmask
        # Outputs
        #   XRVStack.Outputs.SRPCE1MgmtIP
        #   XRVStack.Outputs.SRPCE1DataIP
        #   XRVStack.Outputs.SRPCE2MgmtIP
        #   XRVStack.Outputs.SRPCE2DataIP
        #   XRVStack.Outputs.SRPCE3MgmtIP
        #   XRVStack.Outputs.SRPCE3DataIP
                        

  APIStack:
    Type: AWS::CloudFormation::Stack
    Properties:
      TemplateURL:
        !Sub
          - https://${S3Bucket}.s3.${S3Region}.${AWS::URLSuffix}/${QSS3KeyPrefix}templates/quickstart-cisco-crossworks-APIs.template.yaml
          - S3Region: !If [UsingDefaultBucket, !Ref 'AWS::Region', !Ref QSS3BucketRegion]
            S3Bucket: !If [UsingDefaultBucket, !Sub '${QSS3BucketName}-${AWS::Region}', !Ref QSS3BucketName]
      Parameters:
        VpcId: !Ref VpcId
        CwSSHPassword: !Ref CwSSHPassword
        SecGroup: !Ref SecGroup
        CwMgmtSubnetId: !Ref CwMgmtSubnetId
        CNCControllerIP: !GetAtt CNCStack.Outputs.CrossworkManagementVIP
        NSOIP: !GetAtt NSOStack.Outputs.NSOIP
        SRPCE1Name: R1
        SRPCE1MgmtIP: !GetAtt XRVStack.Outputs.SRPCE1MgmtIP
        SRPCE2Name: R2
        SRPCE2MgmtIP: !GetAtt XRVStack.Outputs.SRPCE2MgmtIP
        SRPCE3Name: R3
        SRPCE3MgmtIP: !GetAtt XRVStack.Outputs.SRPCE3MgmtIP

